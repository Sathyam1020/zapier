
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  password String?
  name  String?

  zaps  Zap[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Zap {
  id       Int      @id @default(autoincrement())
  name     String
  userId   Int

  // Many-to-one relationship with User // Many zaps can be created by one user
  user     User     @relation(fields: [userId], references: [id])

  // One-to-one relationship with Trigger // One zap can have only one trigger
  triggers Trigger?

  // One to many relationship with actions // One zap can have many actions
  actions Action[]

  zapRuns ZapRun[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Trigger {
    id Int @id  @default(autoincrement())
    triggerId Int

    // One to one relationship with zap. // One zap can have only one trigger.
    zapId Int @unique
    zap Zap @relation(fields: [zapId], references: [id])

    // Many to one relationship with available triggers.
    availableTriggerId Int
    availableTrigger AvailableTrigger @relation(fields: [availableTriggerId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Action {
    id       Int      @id @default(autoincrement())
    actionId Int

    // Many to one relationship with zap // Many actions can be for one zap
    zapId    Int
    zap      Zap     @relation(fields: [zapId], references: [id])

    // Many-to-one relationship with AvailableActions // Many actions can be of the same one type ( only 1 ).
    availableActionId Int
    availableAction   AvailableActions @relation(fields: [availableActionId], references: [id])

    createdAt         DateTime @default(now())
    updatedAt         DateTime @updatedAt
}

model AvailableTrigger {
    id Int @id @default(autoincrement())
    name String
    image String

    triggers Trigger[]
}

model AvailableActions {
    id  Int @id @default(autoincrement())
    name String
    image String

    actions Action[]
}

model ZapRun {
    id Int @id @default(autoincrement())
    zapId Int
    zap Zap @relation(fields: [zapId], references: [id])

    metaData Json

    zapRunOutbox ZapRunOutbox?

    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
}

model ZapRunOutbox {
    id Int @id @default(autoincrement())

    zapRunId Int @unique
    zapRun ZapRun @relation(fields: [zapRunId], references: [id])

    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
}
